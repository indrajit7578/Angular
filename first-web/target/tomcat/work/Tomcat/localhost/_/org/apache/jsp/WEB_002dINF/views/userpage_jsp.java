/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-01-20 09:48:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class userpage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://www.w3schools.com/lib/w3.css\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js\"></script>\r\n");
      out.write("<body ng-app=\"myApp\" ng-controller=\"userCtrl\">\r\n");
      out.write("\r\n");
      out.write("<div class=\"w3-container\">\r\n");
      out.write(" <label>Welcome ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userName_}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(" </label> \r\n");
      out.write("\r\n");
      out.write("<p>Message is: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("</p>\r\n");
      out.write("<h3>Users</h3>\r\n");
      out.write("<input class=\"w3-input w3-border\" type=\"text\" ng-model=\"sName\" placeholder=\"Search Name\">\r\n");
      out.write("<table class=\"w3-table w3-bordered w3-striped\">\r\n");
      out.write("  <tr>\r\n");
      out.write("    <th>Edit</th>\r\n");
      out.write("    <th ng-click=\"orderByFunc('fName')\">First Name</th>\r\n");
      out.write("    <th ng-click=\"orderByFunc('lName')\">Last Name</th>\r\n");
      out.write("  </tr>\r\n");
      out.write("  <tr ng-repeat=\"user in users | orderBy:orderVar | filter: searchName() \">\r\n");
      out.write("    <td>\r\n");
      out.write("      <button class=\"w3-btn w3-ripple\" ng-click=\"editUser(user.id)\">&#9998; Edit</button>\r\n");
      out.write("\t  <button class=\"w3-btn w3-ripple\" ng-click=\"deleteUser(user.id)\">&#9998; Delete</button>\r\n");
      out.write("    </td>\r\n");
      out.write("    <td>{{ user.fName }}</td>\r\n");
      out.write("    <td>{{ user.lName }}</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("</table>\r\n");
      out.write("<br>\r\n");
      out.write("<button class=\"w3-btn w3-green w3-ripple\" ng-click=\"editUser('new')\">&#9998; Create New User</button>\r\n");
      out.write("\r\n");
      out.write("<form ng-hide=\"hideform\" method=\"post\" action=\"/spring-mvc/userpage\">\r\n");
      out.write("  <h3 ng-show=\"edit\">Create New User:</h3>\r\n");
      out.write("  <h3 ng-hide=\"edit\">Edit User:</h3>\r\n");
      out.write("    <label>First Name:</label>\r\n");
      out.write("    <input class=\"w3-input w3-border\" type=\"text\" ng-model=\"fName\" ng-disabled=\"!edit\" placeholder=\"First Name\">\r\n");
      out.write("  <br>\r\n");
      out.write("    <label>Last Name:</label>\r\n");
      out.write("    <input class=\"w3-input w3-border\" type=\"text\" ng-model=\"lName\" ng-disabled=\"!edit\" placeholder=\"Last Name\">\r\n");
      out.write("  <br>\r\n");
      out.write("    <label>Password:</label>\r\n");
      out.write("    <input class=\"w3-input w3-border\" type=\"password\" ng-model=\"passw1\" placeholder=\"Password\">\r\n");
      out.write("  <br>\r\n");
      out.write("    <label>Repeat:</label>\r\n");
      out.write("    <input class=\"w3-input w3-border\" type=\"password\" ng-model=\"passw2\" placeholder=\"Repeat Password\">\r\n");
      out.write("  <br>\r\n");
      out.write("  <button class=\"w3-btn w3-green w3-ripple\" ng-disabled=\"error || incomplete\" ng-click=\"addUser()\">&#10004; Save Changes</button>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tangular.module('myApp', []).controller('userCtrl', function($scope,$http) {\r\n");
      out.write("\t$scope.fName = '';\r\n");
      out.write("\t$scope.lName = '';\r\n");
      out.write("\t$scope.passw1 = '';\r\n");
      out.write("\t$scope.passw2 = '';\r\n");
      out.write("\t$scope.sName = '';\r\n");
      out.write("\t$scope.users = [\r\n");
      out.write("\t{id:1, fName:'Hege', lName:\"Pege\" },\r\n");
      out.write("\t{id:2, fName:'Kim',  lName:\"Pim\" },\r\n");
      out.write("\t{id:3, fName:'Sal',  lName:\"Smith\" },\r\n");
      out.write("\t{id:4, fName:'Jack', lName:\"Jones\" },\r\n");
      out.write("\t{id:5, fName:'John', lName:\"Doe\" },\r\n");
      out.write("\t{id:6, fName:'Peter',lName:\"Pan\" }\r\n");
      out.write("\t];\r\n");
      out.write("\t$scope.edit = true;\r\n");
      out.write("\t$scope.error = false;\r\n");
      out.write("\t$scope.incomplete = false; \r\n");
      out.write("\t$scope.hideform = true; \r\n");
      out.write("\t$scope.editUser = function(id) {\r\n");
      out.write("\t  $scope.hideform = false;\r\n");
      out.write("\t  if (id == 'new') {\r\n");
      out.write("\t\t$scope.edit = true;\r\n");
      out.write("\t\t$scope.incomplete = true;\r\n");
      out.write("\t\t$scope.fName = '';\r\n");
      out.write("\t\t$scope.lName = '';\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t$scope.edit = false;\r\n");
      out.write("\t\t$scope.fName = $scope.users[id-1].fName;\r\n");
      out.write("\t\t$scope.lName = $scope.users[id-1].lName;\r\n");
      out.write("\t\t$scope.passw1 = '';\r\n");
      out.write("\t\t$scope.passw2 = '';\t\r\n");
      out.write("\t  }\r\n");
      out.write("\t};\r\n");
      out.write("\t$scope.deleteUser = function(id) {\r\n");
      out.write("\t\tfor(var i=0;i<$scope.users.length;i++) {\r\n");
      out.write("\t\t\tif($scope.users[i].id === id) {\r\n");
      out.write("\t\t\t\t$scope.users.splice(i,1);\r\n");
      out.write("\t\t\t\tbreak;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t$scope.addUser = function() {\r\n");
      out.write("\t\t//alert(\"giving id: \"+$scope.users.length)\r\n");
      out.write("\t\t/*var probableId = $scope.users.length + 1;\r\n");
      out.write("\t\tfor(var i=0;i<$scope.users.length;i++) {\r\n");
      out.write("\t\t\tif($scope.users[i].id === probableId) {\r\n");
      out.write("\t\t\t\t//generate another Id\r\n");
      out.write("\t\t\t\tfor(var j=i;j>=1;j--) {\r\n");
      out.write("\t\t\t\t\tif($scope.users[j].id != j)\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//TODO: ID Generation\r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\t/*Submit the form*/\r\n");
      out.write("\t\t$http({\r\n");
      out.write("            method : 'POST',\r\n");
      out.write("            url : '/spring-mvc/userpage',\r\n");
      out.write("            data : JSON.stringify({\"firstName\":$scope.fName,\"lastName\":$scope.lName,\"password\":$scope.passw1}),\r\n");
      out.write("            contentType : 'application/json; charset=utf-8',\r\n");
      out.write("        \tdataType : 'json'\r\n");
      out.write("        }).then(function mysuccess(response){\r\n");
      out.write("        \tconsole.log(response);\r\n");
      out.write("        \talert(\"Response: \" + response.data.firstName + \" \" + response.data.lastName + \" \" + response.data.password);\r\n");
      out.write("        });\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$scope.users.push( { id:$scope.users.length+1, fName:$scope.fName, lName:$scope.lName } );\r\n");
      out.write("\t\t$scope.fName = '';\r\n");
      out.write("\t\t$scope.lName = '';\r\n");
      out.write("\t\t$scope.passw1 = '';\r\n");
      out.write("\t\t$scope.passw2 = '';\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t$scope.orderByFunc = function(x) {\r\n");
      out.write("\t\t$scope.orderVar = x;\r\n");
      out.write("\t}\r\n");
      out.write("\t$scope.searchName = function() {\r\n");
      out.write("\t\treturn function(user) {\r\n");
      out.write("\t\t\tif($scope.sName.length == 0)\r\n");
      out.write("\t\t\t\treturn true;\r\n");
      out.write("\t\t\treturn (user.fName.toLowerCase().indexOf($scope.sName.toLowerCase())!=-1 || user.lName.toLowerCase().indexOf($scope.sName.toLowerCase())!=-1);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t$scope.$watch('passw1',function() {$scope.test();});\r\n");
      out.write("\t$scope.$watch('passw2',function() {$scope.test();});\r\n");
      out.write("\t$scope.$watch('fName', function() {$scope.test();});\r\n");
      out.write("\t$scope.$watch('lName', function() {$scope.test();});\r\n");
      out.write("\r\n");
      out.write("\t$scope.test = function() {\r\n");
      out.write("\t  if ($scope.passw1 !== $scope.passw2) {\r\n");
      out.write("\t\t$scope.error = true;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t$scope.error = false;\r\n");
      out.write("\t  }\r\n");
      out.write("\t  $scope.incomplete = false;\r\n");
      out.write("\t  if ($scope.edit && (!$scope.fName.length ||\r\n");
      out.write("\t  !$scope.lName.length ||\r\n");
      out.write("\t  !$scope.passw1.length || !$scope.passw2.length)) {\r\n");
      out.write("\t\t $scope.incomplete = true;\r\n");
      out.write("\t  }\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
